// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  address   String   @unique
  username  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  votes     Vote[]
  projects  Project[]
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  avatar      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creator     User     @relation(fields: [creatorId], references: [id])
  creatorId   String   @db.ObjectId
  votes       Vote[]
  social      Social?
  metadata    Json?
}

model Vote {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  String   @db.ObjectId
  votedDate  DateTime @default(now())

  @@unique([userId, votedDate], name: "userId_votedDate")
}

type Social {
  twitter  String?
  discord  String?
  website  String?
}
